<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">    
		<mapper namespace="com.goodee.home.admin.AdminDAO">
			
			<sql id="getFilter">
				<if test="memberFilter != null and memberFilter != ''">
					WHERE RL.ROLENUM IN
					<!-- memberFilter -->
					
					<foreach item="item" index="index" collection="memberFilter" open="(" close=")" separator=",">
						#{item}
					</foreach>
				</if>
				
			</sql>
			
			
			<select id="getMember" parameterType="Pager" resultType="MemberDTO">
				SELECT * 
				FROM (SELECT ROWNUM R,N.*
				      FROM  (SELECT MB.USERID , MB.NICKNAME , SUM(MR.ROLENUM) newRoleNum
				        FROM MEMBERS MB
				            INNER JOIN "MEMBER-ROLE" MR
				            ON MB.USERID = MR.USERID
				            INNER JOIN "ROLE" RL
				            ON MR.ROLENUM = RL.ROLENUM
				        <include refid="getFilter"></include>
				         GROUP BY MB.USERID, MB.NICKNAME )N)
				WHERE R BETWEEN #{startRow} AND #{lastRow}
					
					
					
			</select>
			
			<!-- <resultMap type="MemberDTO" id="getMemberResult">
				<id column="USERID" property="userId"/>
				<result column="NICKNAME" property="nickname"/>
				<collection property="roleDTOs" javaType="List" ofType="RoleDTO">
					<id column="ROLENUM" property="roleNum"/>
					<result column="ROLENAME" property="roleName"/>
				</collection>
				
			
			
			
			</resultMap> -->
			
			<select id="getMemberCount" resultType="Long">
			SELECT COUNT(*) FROM MEMBERS
			</select>
		
		
			<update id="updateMemberRank" parameterType="MemberDTO">
			
				UPDATE "MEMBER-ROLE" SET ROLENUM = #{newRoleNum} WHERE USERID=#{userId} AND ROLENUM = #{roleDTO.roleNum}
			</update>
		
			<insert id="addMemberRank" parameterType="MemberDTO">
				INSERT INTO "MEMBER-ROLE" VALUES (TODAY_SEQ.NEXTVAL,#{newRoleNum},#{userId})
			</insert>
		
			<delete id="deleteMemberRank" parameterType="MemberDTO">
				DELETE "MEMBER-ROLE" WHERE ROLENUM=100 AND USERID=#{userId}
			</delete>
		
		
		
			<select id="getDetailMember" parameterType="MemberDTO" resultMap="getRoleResult">
				SELECT MB.*, RL.ROLENUM, RL.ROLENAME
				FROM MEMBERS MB
				    INNER JOIN "MEMBER-ROLE" MR
				    ON MB.USERID = MR.USERID
				    INNER JOIN "ROLE" RL
				    ON MR.ROLENUM = RL.ROLENUM
				    
				WHERE MB.USERID = #{userId}
				ORDER BY MR.ROLENUM ASC
			</select>
			<resultMap type="MemberDTO" id="getRoleResult">
				<id column="USERID" property="userId"/>
				<result column="PASSWORD" property="password"/>
				<result column="NICKNAME" property="nickname"/>
				<result column="USERNAME" property="userName"/>
				<result column="PHONE" property="phone"/>
				<result column="email" property="email"/>
				
				<collection property="roleDTOs" javaType="List" ofType="RoleDTO">
					<id column="ROLENUM" property="roleNum"/>
					<result column="ROLENAME" property="roleName"/>
				</collection>
			</resultMap>
		
			<select id="getRole" resultType="RoleDTO">
				SELECT * FROM ROLE
			
			</select>
		
		</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">    
		<mapper namespace="com.goodee.home.admin.AdminDAO">
			
			<sql id="getFilter">
			
			<if test="memberFilter != null and memberFilter != ''">
				
				<choose>
					 <when test="memberFilter.length == 1">
						 <foreach item="item" index="index" collection="memberFilter">
							<choose>
								<when test="item == '200' or item =='100'">
								</when>
								<otherwise>
									WHERE MR2.ROLENUM IN (#{item})
								</otherwise>
							</choose>
						</foreach>
					 </when>
					<otherwise>
						
						WHERE MR2.ROLENUM IN
						<foreach item="item" index="index" collection="memberFilter" open="(" close=")" separator=",">
							<if test="item != '200' and item !='100'">
								#{item}
							</if>
						</foreach>
					</otherwise>
				
				</choose>
				
			</if>
			
			
			
			
			
				<!-- <if test="memberFilter != null and memberFilter != ''">
					
					WHERE MR2.ROLENUM IN
					<foreach item="item" index="index" collection="memberFilter" open="(" close=")" separator=",">
						<if test="item != '200' and item !='100'">
							#{item}
						</if>
					</foreach>
				</if> -->
				
			</sql>
			
			<sql id="search">
		 			WHERE
		    		MB.USERID LIKE '%'||#{search}||'%' 	
				 	OR MB.NICKNAME LIKE '%'||#{search}||'%'
			</sql>
			
			<sql id="ban">
				 <if test="memberFilter != null and memberFilter != ''">
					
					<!-- memberFilter -->
					<foreach item="item" index="index" collection="memberFilter">
						<if test="item=='100' || item=='200'">
							<choose>
							<when test="item=='100'">WHERE  ROLENUM-100 BETWEEN 0 AND 99</when>
							<when test="item=='200'">WHERE  ROLENUM BETWEEN 0 AND 99</when>
							<otherwise></otherwise>
							</choose>
						</if>
					</foreach>
				</if>
				
			</sql>
			
			
			
			
			<select id="getMember" parameterType="Pager" resultType="MemberDTO">
			 SELECT * 
               FROM  (SELECT * FROM(SELECT ROWNUM R, S.*
				FROM (SELECT N.USERID , N.NICKNAME, MAX(N.NEWROLENUM) ROLENUM
				      FROM  (SELECT MB.USERID , MB.NICKNAME ,SUM(MR.ROLENUM) newRoleNum
				        FROM MEMBERS MB
				            INNER JOIN "MEMBER-ROLE" MR
				            ON MB.USERID = MR.USERID
				            INNER JOIN "ROLE" RL
				            ON MR.ROLENUM = RL.ROLENUM
                            <include refid="search"></include>
                            GROUP BY MB.USERID, MB.NICKNAME 
				         ) N
                         INNER JOIN "MEMBER-ROLE" MR2
                         ON N.USERID = MR2.USERID
                        <include refid="getFilter"></include>  
                        
                        GROUP BY N.USERID , N.NICKNAME
                        ) S)<include refid="ban"></include>  )
                       
				       
				WHERE R BETWEEN #{startRow} AND #{lastRow}
					
					
					
			</select>
			
			
			
			<select id="getMemberCount" parameterType="Pager" resultType="Long">
			SELECT * 
			FROM (SELECT COUNT(R)
               FROM (SELECT ROWNUM R, S.*
				FROM (SELECT N.USERID , N.NICKNAME, MAX(N.NEWROLENUM) roleNum
				      FROM  (SELECT MB.USERID , MB.NICKNAME ,SUM(MR.ROLENUM) newRoleNum
				        FROM MEMBERS MB
				            INNER JOIN "MEMBER-ROLE" MR
				            ON MB.USERID = MR.USERID
				            INNER JOIN "ROLE" RL
				            ON MR.ROLENUM = RL.ROLENUM
                            <include refid="search"></include>
                            GROUP BY MB.USERID, MB.NICKNAME 
				         ) N
                         INNER JOIN "MEMBER-ROLE" MR2
                         ON N.USERID = MR2.USERID
                        <include refid="getFilter"></include>  
                        
                        GROUP BY N.USERID , N.NICKNAME
                        ) S) <include refid="ban"></include>  )
                       
				
			</select>
		
		
			<update id="updateMemberRank" parameterType="MemberDTO">
			
				UPDATE "MEMBER-ROLE" SET ROLENUM = #{roleNum} WHERE USERID=#{userId} AND ROLENUM = #{roleDTO.roleNum}
			</update>
		
			<insert id="addMemberRank" parameterType="MemberDTO">
				INSERT INTO "MEMBER-ROLE" VALUES (TODAY_SEQ.NEXTVAL,#{roleNum},#{userId})
			</insert>
		
			<delete id="deleteMemberRank" parameterType="MemberDTO">
				DELETE "MEMBER-ROLE" WHERE ROLENUM=#{roleNum} AND USERID=#{userId}
			</delete>
		
		
		
			<select id="getDetailMember" parameterType="MemberDTO" resultMap="getRoleResult">
				SELECT MB.*, RL.ROLENUM, RL.ROLENAME
				FROM MEMBERS MB
				    INNER JOIN "MEMBER-ROLE" MR
				    ON MB.USERID = MR.USERID
				    INNER JOIN "ROLE" RL
				    ON MR.ROLENUM = RL.ROLENUM
				    
				WHERE MB.USERID = #{userId}
				ORDER BY MR.ROLENUM ASC
			</select>
			<resultMap type="MemberDTO" id="getRoleResult">
				<id column="USERID" property="userId"/>
				<result column="PASSWORD" property="password"/>
				<result column="NICKNAME" property="nickname"/>
				<result column="USERNAME" property="userName"/>
				<result column="PHONE" property="phone"/>
				<result column="email" property="email"/>
				
				<collection property="roleDTOs" javaType="List" ofType="RoleDTO">
					<id column="ROLENUM" property="roleNum"/>
					<result column="ROLENAME" property="roleName"/>
				</collection>
			</resultMap>
		
			<select id="getRole" resultType="RoleDTO">
				SELECT * FROM ROLE
			
			</select>
		
		</mapper>
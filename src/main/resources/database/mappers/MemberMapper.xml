<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">    
		<mapper namespace="com.goodee.home.member.MemberDAO">
			
			<delete id="deleteProfileImg" parameterType="MemberDTO">
				
				DELETE MEMBERFILE WHERE USERID = #{userId}
			</delete>
			
			
			<insert id="setProfileImg" parameterType="MemberFileDTO">
				INSERT INTO MEMBERFILE VALUES (TODAY_SEQ.NEXTVAL,#{fileName} ,#{oriName} ,#{userId})
			</insert>
			<update id="updateProfileImg" parameterType="MemberFileDTO">
			
				UPDATE MEMBERFILE SET FILENAME = #{fileName}, ORINAME = #{oriName} WHERE USERID=#{userId}
			</update>
		
			<insert id="getJoin" parameterType="MemberDTO">
				INSERT INTO MEMBERS VALUES (#{userId},#{password},#{nickname},#{userName},#{phone},#{email})
			</insert>
			<insert id="setJoinRole" parameterType="MemberDTO">
				INSERT INTO "MEMBER-ROLE" VALUES(TODAY_SEQ.NEXTVAL,40,#{userId})
			</insert>
			<select id="getJoinOverlab" parameterType="MemberDTO" resultType="MemberDTO">
			SELECT * FROM MEMBERS WHERE USERID = #{userId} OR NICKNAME = #{nickname} OR PHONE = #{phone} OR EMAIL = #{email}
			
			</select>
		
		
			<update id="setUpdate" parameterType="MemberDTO">
			UPDATE MEMBERS SET NICKNAME = #{nickname}, PHONE = #{phone} , EMAIL =#{email} ,USERNAME = #{userName} WHERE USERID = #{userId}
			</update>
			<update id="setUpdatePw" parameterType="MemberDTO">
			UPDATE MEMBERS SET PASSWORD = #{password} WHERE USERID = #{userId}
			</update>
			
			
			<select id="getLogin" parameterType="MemberDTO" resultMap="getRoleResult">
				SELECT MB.*, RL.ROLENUM, RL.ROLENAME, MF.FILENUM, MF.FILENAME
				FROM MEMBERS MB
				    INNER JOIN "MEMBER-ROLE" MR
				    ON MB.USERID = MR.USERID
				    INNER JOIN "ROLE" RL
				    ON MR.ROLENUM = RL.ROLENUM
				    LEFT JOIN MEMBERFILE MF
                    ON MB.USERID = MF.USERID
				WHERE MB.USERID = #{userId}  AND MB.PASSWORD = #{password}
				ORDER BY MR.ROLENUM ASC
			</select>
			<resultMap type="MemberDTO" id="getRoleResult">
				<id column="USERID" property="userId"/>
				<result column="PASSWORD" property="password"/>
				<result column="NICKNAME" property="nickname"/>
				<result column="USERNAME" property="userName"/>
				<result column="PHONE" property="phone"/>
				<result column="email" property="email"/>
				
				<association property="memberFileDTO" javaType="MemberFileDTO">
					<id column="FILENUM" property="fileNum"/>
					<result column="FILENAME" property="fileName"/>
				
				</association>
				
				
				<collection property="roleDTOs" javaType="List" ofType="RoleDTO">
					<id column="ROLENUM" property="roleNum"/>
					<result column="ROLENAME" property="roleName"/>
				</collection>
			</resultMap>
			
			
			<select id="getDelivery" parameterType="MemberDTO" resultType="DeliveryDTO">
				SELECT * FROM DELIVERY WHERE USERID = #{userId}
			</select>
			<select id="setDelivery" parameterType="DeliveryDTO" >
				INSERT INTO DELIVERY VALUES(TODAY_SEQ.NEXTVAL,#{phone}, #{name}, #{note}, #{deliveryName},#{userId},#{address},#{postcode},#{detailAddress},#{extraAddress})</select>
			<update id="updateDelivery" parameterType="DeliveryDTO">
				UPDATE DELIVERY SET ADDRESS = #{address},POSTCODE =#{postcode} ,DETAILADDRESS=#{detailAddress} ,EXTRAADDRESS=#{extraAddress}, PHONE = #{phone} ,NAME = #{name},NOTE = #{note},DELIVERYNAME=#{deliveryName} WHERE ADDRESSNUM = #{addressNum}
			</update>
			<delete id="deleteDelivery" parameterType="DeliveryDTO">
				DELETE FROM DELIVERY WHERE ADDRESSNUM = #{addressNum}
			
			</delete>
			
			<delete id="dropMember" parameterType="MemberDTO">
				DELETE MEMBERS WHERE USERID = #{userId}
			</delete>
			<delete id="dropMemberRank" parameterType="MemberDTO">
				DELETE "MEMBER-ROLE" WHERE USERID = #{userId}
			</delete>
			
			<select id="findId" parameterType="MemberDTO" resultType="MemberDTO">
				SELECT USERID FROM MEMBERS WHERE USERNAME=#{userName} AND EMAIL=#{email}
			</select>
			<select id="findPw" parameterType="MemberDTO" resultType="MemberDTO">
				SELECT PASSWORD FROM MEMBERS WHERE USERID=#{userId} AND EMAIL=#{email}
			</select>
			
			
			<select id="getCart" parameterType="MemberDTO" resultMap="getCartResult">
			
				SELECT C.*,P.PRODUCTNAME,P.DELIFEE,P.BRAND ,P.PRICE,
						OP1.OPTIONNAME OP1NAME,OP1.OPTIONPRICE OP1PRICE,
						OP2.OPTIONNAME OP2NAME,OP2.OPTIONPRICE OP2PRICE,
						OP3.OPTIONNAME OP3NAME,OP3.OPTIONPRICE OP3PRICE
				FROM CART C
				    INNER JOIN PRODUCT P
				    ON C.PRODUCTNUM = P.PRODUCTNUM
				    LEFT JOIN OPTION1 OP1
				    ON C.OPTION1 = OP1.NUM
				    LEFT JOIN OPTION2 OP2
				    ON C.OPTION2 = OP2.NUM
				    LEFT JOIN OPTION3 OP3
				    ON C.OPTION3 = OP3.NUM
				WHERE C.USERID = #{userId}
			</select>
			<resultMap type="CartDTO" id="getCartResult">
				<id column="CARTNUM" property="cartNum"/>
				<result column="BUYAMOUNT" property="buyAmount"/>
				<result column="PRODUCTNUM" property="productNum"/>
				<result column="USERID" property="userId"/>
				<result column="OPTION1" property="option1"/>
				<result column="OPTION2" property="option2"/>
				<result column="OPTION3" property="option3"/>
				<association property="productDTO" javaType="ProductDTO">
					<result column="PRODUCTNAME" property="productName"/>
					<result column="DELIFEE" property="deliFee"/>
					<result column="PRICE" property="price"/>
					<result column="BRAND" property="brand"/>
					
				</association>
				<association property="option1DTO" javaType="Option1DTO">
					<result column="OP1NAME" property="optionName"/>
					<result column="OP1PRICE" property="optionPrice"/>
				</association>
				<association property="option2DTO" javaType="Option2DTO">
					<result column="OP2NAME" property="optionName"/>
					<result column="OP2PRICE" property="optionPrice"/>
				</association>
				<association property="option3DTO" javaType="Option3DTO">
					<result column="OP3NAME" property="optionName"/>
					<result column="OP3PRICE" property="optionPrice"/>
				</association>
			
			</resultMap>
			
		</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">    
		<mapper namespace="com.goodee.home.member.MemberDAO">
			
			<delete id="deleteProfileImg" parameterType="MemberDTO">
				
				DELETE MEMBERFILE WHERE USERID = #{userId}
			</delete>
			
			
			<insert id="setProfileImg" parameterType="MemberFileDTO">
				INSERT INTO MEMBERFILE VALUES (TODAY_SEQ.NEXTVAL,#{fileName} ,#{oriName} ,#{userId})
			</insert>
			<update id="updateProfileImg" parameterType="MemberFileDTO">
			
				UPDATE MEMBERFILE SET FILENAME = #{fileName}, ORINAME = #{oriName} WHERE USERID=#{userId}
			</update>
		
			<insert id="getJoin" parameterType="MemberDTO">
				INSERT INTO MEMBERS VALUES (#{userId},#{password},#{nickname},#{userName},#{phone},#{email},0)
			</insert>
			<insert id="setJoinRole" parameterType="MemberDTO">
				INSERT INTO "MEMBER-ROLE" VALUES(TODAY_SEQ.NEXTVAL,40,#{userId})
			</insert>
			<select id="getJoinOverlab" parameterType="MemberDTO" resultType="MemberDTO">
			SELECT * FROM MEMBERS WHERE USERID = #{userId} OR NICKNAME = #{nickname} OR PHONE = #{phone} OR EMAIL = #{email}
			
			</select>
		
		
			<update id="setUpdate" parameterType="MemberDTO">
			UPDATE MEMBERS SET NICKNAME = #{nickname}, PHONE = #{phone} , EMAIL =#{email} ,USERNAME = #{userName} WHERE USERID = #{userId}
			</update>
			<update id="setUpdatePw" parameterType="MemberDTO">
			UPDATE MEMBERS SET PASSWORD = #{password} WHERE USERID = #{userId}
			</update>
			
			
			<select id="getLogin" parameterType="MemberDTO" resultMap="getRoleResult">
				SELECT MB.*, RL.ROLENUM, RL.ROLENAME, MF.FILENUM, MF.FILENAME
				FROM MEMBERS MB
				    INNER JOIN "MEMBER-ROLE" MR
				    ON MB.USERID = MR.USERID
				    INNER JOIN "ROLE" RL
				    ON MR.ROLENUM = RL.ROLENUM
				    LEFT JOIN MEMBERFILE MF
                    ON MB.USERID = MF.USERID
				WHERE MB.USERID = #{userId}  AND MB.PASSWORD = #{password}
				ORDER BY MR.ROLENUM ASC
			</select>
			<resultMap type="MemberDTO" id="getRoleResult">
				<id column="USERID" property="userId"/>
				<result column="PASSWORD" property="password"/>
				<result column="NICKNAME" property="nickname"/>
				<result column="USERNAME" property="userName"/>
				<result column="PHONE" property="phone"/>
				<result column="email" property="email"/>
				<result column="MILEAGE" property="mileage"/>
				
				<association property="memberFileDTO" javaType="MemberFileDTO">
					<id column="FILENUM" property="fileNum"/>
					<result column="FILENAME" property="fileName"/>
				
				</association>
				
				
				<collection property="roleDTOs" javaType="List" ofType="RoleDTO">
					<id column="ROLENUM" property="roleNum"/>
					<result column="ROLENAME" property="roleName"/>
				</collection>
			</resultMap>
			
			
			<select id="getDelivery" parameterType="MemberDTO" resultType="DeliveryDTO">
				SELECT * FROM DELIVERY WHERE USERID = #{userId}
			</select>
			<insert id="setDelivery" parameterType="DeliveryDTO" >
				<selectKey keyProperty="addressNum" order="BEFORE" resultType="long">
					SELECT TODAY_SEQ.NEXTVAL FROM DUAL
				</selectKey>
				INSERT INTO DELIVERY VALUES(#{addressNum}, #{phone}, #{name}, #{note}, #{deliveryName},#{userId},#{address},#{postcode},#{detailAddress},#{extraAddress})
			</insert>
			<update id="updateDelivery" parameterType="DeliveryDTO">
				UPDATE DELIVERY SET ADDRESS = #{address},POSTCODE =#{postcode} ,DETAILADDRESS=#{detailAddress} ,EXTRAADDRESS=#{extraAddress}, PHONE = #{phone} ,NAME = #{name},NOTE = #{note},DELIVERYNAME=#{deliveryName},USERID=#{userId} WHERE ADDRESSNUM = #{addressNum}
			</update>
			<delete id="deleteDelivery" parameterType="DeliveryDTO">
				DELETE FROM DELIVERY WHERE ADDRESSNUM = #{addressNum}
			
			</delete>
			
			<select id="deleteDeliveryCheck" parameterType="DeliveryDTO" resultType="Long">
				SELECT ORDERNUM FROM "ORDER" WHERE ADDRESSNUM = #{addressNum}
			</select>
			
			
			<delete id="dropMember" parameterType="MemberDTO">
				DELETE MEMBERS WHERE USERID = #{userId}
			</delete>
			<delete id="dropMemberRank" parameterType="MemberDTO">
				DELETE "MEMBER-ROLE" WHERE USERID = #{userId}
			</delete>
			
			<select id="findId" parameterType="MemberDTO" resultType="MemberDTO">
				SELECT USERID FROM MEMBERS WHERE USERNAME=#{userName} AND EMAIL=#{email}
			</select>
			<select id="findPw" parameterType="MemberDTO" resultType="MemberDTO">
				SELECT USERID FROM MEMBERS WHERE USERID=#{userId} AND EMAIL=#{email}
			</select>
			
			
			<select id="getCart" parameterType="MemberDTO" resultMap="getCartResult">
			
				SELECT C.CARTNUM,C.BUYAMOUNT,C.PRODUCTNUM,P.PRODUCTNAME,P.DELIFEE,P.BRAND ,P.PRICE
     					  ,CO.OPTIONCOUNT, PO.OPTIONNAME,PO.OPTIONPRICE , PI.FILENAME
                  FROM CART C
                        INNER JOIN PRODUCT P
                        ON C.PRODUCTNUM = P.PRODUCTNUM
                        
                        LEFT JOIN  "CART-OPTION" CO
                        ON CO.CARTNUM = C.CARTNUM
                        
                        
                        LEFT JOIN PRODUCTIMAGE PI
                        ON C.PRODUCTNUM = PI.PRODUCTNUM
                        
                        LEFT JOIN PRODUCTOPTION PO
                        ON CO.OPTIONNUM = PO.OPTIONNUM
                            
                     WHERE USERID =#{userId} AND PI.ORINAME LIKE '%01%'
				
			</select>
			<resultMap type="CartDTO" id="getCartResult">
				<id column="CARTNUM" property="cartNum"/>
				<result column="BUYAMOUNT" property="buyAmount"/>
				<result column="FILENAME" property="fileName"/>
				<result column="PRODUCTNUM" property="productNum"/>
				
				<association property="productDTO" javaType="ProductDTO">
					<result column="PRODUCTNAME" property="productName"/>
					<result column="DELIFEE" property="deliFee"/>
					<result column="BRAND" property="brand"/>
					<result column="PRICE" property="price"/>
					
				</association>
				<collection property="productOptionDTOs" javaType="List" ofType="ProductOptionDTO">
					<result column="OPTIONCOUNT" property="optionCount"/>
					<result column="OPTIONNAME" property="optionName"/>
					<result column="OPTIONPRICE" property="optionPrice"/>
				
				</collection>
			</resultMap>
			
			
			
			
			
			
			<select id="getOrder" parameterType="MemberDTO" resultMap="getOrderResult">
			
				SELECT  O.* ,P.PRODUCTNAME,P.DELIFEE,P.BRAND ,P.PRICE
     					  ,OO.OPTIONCOUNT, PO.OPTIONNAME,PO.OPTIONPRICE , PI.FILENAME
                  FROM "ORDER" O
                        INNER JOIN PRODUCT P
                        ON O.PRODUCTNUM = P.PRODUCTNUM
                        
                        LEFT JOIN  "ORDER-OPTION" OO
                        ON OO.ORDERNUM = O.ORDERNUM
                        
                        LEFT JOIN PRODUCTIMAGE PI
                        ON O.PRODUCTNUM = PI.PRODUCTNUM
                        
                        LEFT JOIN PRODUCTOPTION PO
                        ON OO.OPTIONNUM = PO.OPTIONNUM
                            
                     WHERE USERID =#{userId} AND PI.ORINAME LIKE '%01%'
				
			</select>
			<resultMap type="OrderDTO" id="getOrderResult">
				<id column="ORDERNUM" property="orderNum"/>
				<result column="USERID" property="userId"/>
				<result column="ADDRESSNUM" property="addressNum"/>
				<result column="ORDERDATE" property="orderDate"/>
				<result column="PAYMENT" property="payment"/>
				<result column="PRODUCTNUM" property="productNum"/>
				<result column="BUYAMOUNT" property="buyAmount"/>
				<result column="DELIVERYSTATUS" property="deliveryStatus"/>
				<result column="FILENAME" property="fileName"/>
				<association property="productDTO" javaType="ProductDTO">
					<result column="PRODUCTNAME" property="productName"/>
					<result column="DELIFEE" property="deliFee"/>
					<result column="BRAND" property="brand"/>
					<result column="PRICE" property="price"/>
				</association>
				<collection property="productOptionDTOs" javaType="List" ofType="ProductOptionDTO">
					<result column="OPTIONCOUNT" property="optionCount"/>
					<result column="OPTIONNAME" property="optionName"/>
					<result column="OPTIONPRICE" property="optionPrice"/>
				
				</collection>
			</resultMap>
			
			
			
			<insert id="addCart" parameterType="CartDTO" >
				<selectKey keyProperty="cartNum" order="BEFORE" resultType="long">
					SELECT TODAY_SEQ.NEXTVAL FROM DUAL
				</selectKey>
				INSERT INTO CART VALUES (#{cartNum},#{userId},#{productNum},#{buyAmount})
			</insert>
			
			<delete id="deleteCart" parameterType="CartDTO">
				DELETE CART WHERE CARTNUM = #{cartNum}
			</delete>
			<delete id="deleteCartOption" parameterType="CartDTO">
				DELETE "CART-OPTION" WHERE CARTNUM = #{cartNum}
			</delete>
			
			
			<select id="getCount" parameterType="Pager" resultType="Long">
			 	
				SELECT COUNT(*) FROM QNA WHERE USERID = #{userId}
				
			</select>
			
			
			<select id="getMyQna" parameterType="Pager" resultType="QnaDTO">
			 	
				SELECT * FROM
				( SELECT ROWNUM R,N.*
				 FROM (SELECT * FROM QNA
				WHERE USERID = #{userId}
				 ORDER BY BOARDNUM DESC) N)
				 WHERE R BETWEEN #{startRow} AND #{lastRow}
			</select>
			
			<select id="getMyPdReview" parameterType="MemberDTO" resultType="ProductReviewDTO">
			  SELECT PR.*,PD.PRODUCTNAME,PD.BRAND
				 FROM PRODUCTREVIEW PR
	             INNER JOIN PRODUCT PD
	             ON PR.PRODUCTNUM = PD.PRODUCTNUM
	             
				 WHERE USERID=#{userId}
			</select>
			
			<select id="getOrderNum" resultType="Long">
				SELECT ORDER_SEQ.NEXTVAL FROM DUAL
			</select>
			
			<insert id="setOrder" parameterType="OrderDTO">
				<selectKey keyProperty="orderNum" order="BEFORE" resultType="long">
					SELECT ((SELECT TO_CHAR(SYSDATE, 'YYMMDDHH') as NOWDATE FROM DUAL)|| (SELECT  LPAD(#{orderNum},3,'0') FROM DUAL)) FROM DUAL
				</selectKey>
				INSERT INTO "ORDER" VALUES (#{orderNum},#{userId},#{addressNum},SYSDATE,#{payment},#{productNum},#{buyAmount},#{deliveryStatus})
			</insert>
			<select id="getMyRoomReview" parameterType="MemberDTO" resultMap="getMyRoomReviewResult">
			  SELECT HR.REVIEWNUM, HR.GRADE, HR."DATE", HR.CONTENTS, HR.NUM, RS.SIGUNGU, RS.BUNJI, RS.BUILDTYPE, RS.BUILDINGNM, RS.ROADNAME ,HI.FILENAME
				    FROM HOUSEREVIEW HR
				    INNER JOIN REALESTATE RS
				    ON HR.NUM = RS.NUM
				    LEFT JOIN HOUSEIMAGE HI
                    ON HR.NUM = HI.NUM
				    WHERE HR.USERID=#{userId} 
			</select>
			<resultMap type="HouseReviewDTO" id="getMyRoomReviewResult">
				<id column="REVIEWNUM" property="reviewNum"/>
				<result column="GRADE" property="grade"/>
				<result column="DATE" property="date"/>
				<result column="CONTENTS" property="contents"/>
				<result column="NUM" property="num"/>
			
			<association property="realEstateDTO" javaType="RealEstateDTO">
				<result column="SIGUNGU" property="sigungu"/>
				<result column="BUNJI" property="bunji"/>
				<result column="BUILDTYPE" property="buildType"/>
				<result column="BUILDINGNM" property="buildingNm"/>
				<result column="ROADNAME" property="roadName"/>
			
			</association>
			<collection property="houseImageDTOs" javaType="List" ofType="HouseImageDTO">
				<result column="FILENAME" property="fileName"/>
			</collection>
			
			
			</resultMap>
			
			
			<select id="getInterestedHouse" parameterType="MemberDTO" resultType="RealEstateDTO">
			   SELECT RS.SIGUNGU, RS.BUNJI, RS.BUILDTYPE, RS.BUILDINGNM, RS.ROADNAME , RS.NUM , HI.FILENAME
				FROM INTERESTED IT
				    INNER JOIN REALESTATE RS
				    ON IT.NUM = RS.NUM
                    LEFT JOIN HOUSEIMAGE HI
                    ON IT.NUM = HI.NUM
				    WHERE IT.USERID= #{userId}
			</select>
			
			<delete id="deleteInterest" parameterType="RealEstateDTO">
				DELETE INTERESTED WHERE NUM = #{num} AND USERID=#{userId}
			
			</delete>
			
			
			<select id="getMyPage" parameterType="MemberDTO" resultType="MemberDTO">
			
				SELECT M.MILEAGE , C.CNUM , I.INUM
	            FROM MEMBERS M
	            LEFT JOIN (SELECT COUNT(CARTNUM) CNUM,USERID 
	                        FROM CART 
	                        WHERE USERID=#{userId}
	                        GROUP BY USERID) C
	            ON M.USERID = C.USERID
	            LEFT JOIN (SELECT COUNT(NUM) INUM,USERID 
	                        FROM INTERESTED 
	                        WHERE USERID=#{userId}
	                        GROUP BY USERID) I
	            ON M.USERID = I.USERID
				WHERE M.USERID=#{userId}
			
			
			</select>
			
			<insert id="setOrderOption" parameterType="Order_OptionDTO">
				INSERT INTO "ORDER-OPTION" VALUES (ORDER_SEQ.NEXTVAL, #{orderNum}, #{optionNum}, #{optionCount})
			</insert>
			
			<insert id="setCartOption" parameterType="Cart_OptionDTO">
				INSERT INTO "CART-OPTION" VALUES (ORDER_SEQ.NEXTVAL, #{cartNum}, #{optionNum}, #{optionCount})
			</insert>
			
			<update id="updateMileage" parameterType="MemberDTO">
				UPDATE MEMBERS SET MILEAGE=MILEAGE+#{mileage} WHERE USERID=#{userId}
			</update>
			
			<select id="getMileage" parameterType="MemberDTO" resultType="Long">
				SELECT MILEAGE FROM MEMBERS WHERE USERID=#{userId}
			</select>
		</mapper>